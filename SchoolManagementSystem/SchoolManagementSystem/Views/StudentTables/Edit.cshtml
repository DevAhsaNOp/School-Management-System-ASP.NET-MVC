@model SchoolManagementSystem.Request.StudentRequest

@{
    ViewBag.Title = "Edit";
}

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Edit Student</h6>
    </div>
    <div class="card-body">
        @using (Html.BeginForm("Edit", "StudentTables", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                <div class="form-group row">
                    <div class="col-lg-5">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    <div class="col-lg-5">
                        @Html.LabelFor(model => model.FatherName, htmlAttributes: new { @class = "control-label" })
                        @Html.ValidationMessageFor(model => model.FatherName, "", new { @class = "text-danger" })
                        @Html.EditorFor(model => model.FatherName, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-lg-5">
                        @Html.LabelFor(model => model.GuardianContactNo, htmlAttributes: new { @class = "control-label" })
                        @Html.ValidationMessageFor(model => model.GuardianContactNo, "", new { @class = "text-danger" })
                        @Html.EditorFor(model => model.GuardianContactNo, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    <div class="col-lg-5">
                        @Html.LabelFor(model => model.Nationality, htmlAttributes: new { @class = "control-label" })
                        @Html.ValidationMessageFor(model => model.Nationality, "", new { @class = "text-danger" })
                        @Html.EditorFor(model => model.Nationality, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-lg-5">
                        @Html.LabelFor(model => model.ClassID, "ClassID", htmlAttributes: new { @class = "control-label" })
                        @Html.ValidationMessageFor(model => model.ClassID, "", new { @class = "text-danger" })
                        @Html.DropDownListFor(model => model.ClassID, (SelectList)ViewBag.ClassID, new { @class = "form-control" })
                    </div>
                    <div class="col-lg-5">
                        @Html.LabelFor(model => model.SectionID, "SectionID", htmlAttributes: new { @class = "control-label" })
                        @Html.ValidationMessageFor(model => model.SectionID, "", new { @class = "text-danger" })
                        @Html.DropDownList("SectionID", new List<SelectListItem>
                        {
                            new SelectListItem{ Text="--- Select Section ---", Value="0"}
                        }, new { @class = "form-control", @disabled = "disabled" })
                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-lg-5">
                        @Html.LabelFor(model => model.DateofBirth, htmlAttributes: new { @class = "control-label" })
                        @Html.ValidationMessageFor(model => model.DateofBirth, "", new { @class = "text-danger" })
                        @Html.EditorFor(model => model.DateofBirth, new { htmlAttributes = new { @class = "form-control datepicker", @type = "date" } })
                    </div>
                    <div class="col-lg-5">
                        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label" })
                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                        @Html.DropDownListFor(model => model.Gender, new List<SelectListItem>   {
                            new SelectListItem{ Text="Male", Value="Male"},
                            new SelectListItem{ Text="Female", Value="Female"}
                            }, "--- Select ---", new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-lg-5">
                        @Html.LabelFor(model => model.ContactNo, htmlAttributes: new { @class = "control-label" })
                        @Html.ValidationMessageFor(model => model.ContactNo, "", new { @class = "text-danger" })
                        @Html.EditorFor(model => model.ContactNo, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    <div class="col-lg-5">
                        @Html.LabelFor(model => model.Photo, "Select Photo", htmlAttributes: new { @class = "control-label" })
                        @Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })
                        @Html.EditorFor(model => model.Photo, new { htmlAttributes = new { @style = "visibility: hidden; margin: 0 !important; padding: 0 !important; line-height: 0 !important;" } })
                        <div class="input-group mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text" id="inputGroupImage">Upload</span>
                            </div>
                            <div class="custom-file">
                                <input type="file" name="Image" class="custom-file-input" id="Image" aria-describedby="inputGroupImage">
                                <label class="custom-file-label" for="Image">Choose file</label>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-lg-5">
                        @Html.LabelFor(model => model.AddmissionDate, htmlAttributes: new { @class = "control-label" })
                        @Html.ValidationMessageFor(model => model.AddmissionDate, "", new { @class = "text-danger" })
                        @Html.EditorFor(model => model.AddmissionDate, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                    </div>
                    <div class="col-lg-5">
                        @Html.LabelFor(model => model.PreviousSchool, htmlAttributes: new { @class = "control-label" })
                        @Html.ValidationMessageFor(model => model.PreviousSchool, "", new { @class = "text-danger" })
                        @Html.EditorFor(model => model.PreviousSchool, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-lg-5">
                        @Html.LabelFor(model => model.PreviousPercentage, htmlAttributes: new { @class = "control-label" })
                        @Html.ValidationMessageFor(model => model.PreviousPercentage, "", new { @class = "text-danger" })
                        @Html.EditorFor(model => model.PreviousPercentage, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    <div class="col-lg-5">
                        @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label" })
                        @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
                        @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-12">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="form-group">
                    <input type="submit" value="Create" class="btn btn-success" />
                    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-defaut" })
                </div>

            </div>
        }
    </div>
</div>
<script>
    $(document).ready(function () {

        $('#ClassID').change(function () {
            var selectedClassId = $(this).val();
            var sectionsDropdown = $('#SectionID');
            sectionsDropdown.empty();

            var classWithSections = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.ClassWithSections));

            var sections = classWithSections.find(item => item.ClassID == selectedClassId)?.Section || [];
            var sectionID = @(Model != null ? Model.SectionID != null ? Model.SectionID.GetValueOrDefault() > 0 ? Model.SectionID.GetValueOrDefault() : 0 : 0 : 0);

            if (sections.length > 0) {
                sectionsDropdown.prop('disabled', false);
                sectionsDropdown.append('<option value="0">Select Section</option>');
                $.each(sections, function (index, section) {
                    if (section.Id == sectionID && selectedClassId == @Model.ClassID) {
                        sectionsDropdown.append(`<option value="${section.Id}" selected>${section.Name}</option>`);
                    } else {
                        sectionsDropdown.append(`<option value="${section.Id}">${section.Name}</option>`);
                    }
                });
            } else {
                sectionsDropdown.append('<option value="0">No sections available</option>');
            }
        });

        $('#Image').on('change', function () {
            var fileName = $(this).val();
            $(this).next('.custom-file-label').html(fileName);
            $('#Photo').val(fileName);
        });

        var selectedClassId = $('#ClassID').val();
        if (selectedClassId) {
            $('#ClassID').trigger('change');
        }

        var fileName = $('#Photo').val();
        if (fileName) {
            $('#Image').next('.custom-file-label').html(fileName);
        }

    });
</script>