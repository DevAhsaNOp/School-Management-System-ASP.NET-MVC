@model SchoolManagementSystem.Request.ClassSubjectCreateRequest

@{
    ViewBag.Title = "Create";
}


<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Create A New Class Subject</h6>
    </div>
    <div class="card-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.ClassSectionID, "Select Class Section", htmlAttributes: new { @class = "control-label col-md-2", @style = "width: fit-content;" })
                    @Html.ValidationMessageFor(model => model.ClassSectionID, "", new { @class = "text-danger" })
                    <div class="col-md-5">
                        @Html.DropDownList("ClassSectionID", null, "---Select---", htmlAttributes: new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SubjectID, "Select Subjects", htmlAttributes: new { @class = "control-label col-md-2", @style = "width: fit-content;" })
                    @Html.ValidationMessageFor(model => model.SubjectID, "", new { @class = "text-danger" })
                    <div class="col-md-10">
                        <table>
                            @for (int i = 0; i < Model.SubjectID.Count(); i++)
                            {
                                <tr>
                                    <td>
                                        @Html.CheckBoxFor(m => m.SubjectID[i].Selected)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(m => m.SubjectID[i].Text)
                                        @Html.HiddenFor(m => m.SubjectID[i].Value)
                                        @Html.HiddenFor(m => m.SubjectID[i].Text)
                                    </td>
                                </tr>
                            }
                        </table>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IsActive, "Status", htmlAttributes: new { @class = "control-label col-md-2", @style = "width: fit-content;" })
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.IsActive)
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-success" />
                        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-defaut" })
                    </div>
                </div>
            </div>
        }
    </div>
</div>